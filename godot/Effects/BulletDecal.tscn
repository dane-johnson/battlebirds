[gd_scene load_steps=5 format=2]

[ext_resource path="res://Effects/Decal.tscn" type="PackedScene" id=1]
[ext_resource path="res://Effects/bullet_hole.png" type="Texture" id=2]

[sub_resource type="Shader" id=4]
code = "shader_type spatial;

uniform sampler2D texture_albedo : hint_albedo;
uniform float cube_half_size = 0.5;

vec3 world_pos_from_depth(float depth, vec2 screen_uv, mat4 inverse_proj, mat4 inverse_view) {
	float z = depth * 2.0 - 1.0;
	
	vec4 clipSpacePosition = vec4(screen_uv * 2.0 - 1.0, z, 1.0);
	vec4 viewSpacePosition = inverse_proj * clipSpacePosition;
	
	viewSpacePosition /= viewSpacePosition.w;
	
	vec4 worldSpacePosition = inverse_view * viewSpacePosition;
	
	return worldSpacePosition.xyz;
}

void vertex() {
	VERTEX.xz += VERTEX.xz * 10.0;
}

void fragment() {
	float depth = texture(DEPTH_TEXTURE, SCREEN_UV).x;
	vec3 world_pos = world_pos_from_depth(depth, SCREEN_UV, INV_PROJECTION_MATRIX, CAMERA_MATRIX);
	vec4 test_pos = (inverse(WORLD_MATRIX) * vec4(world_pos, 1.0));
	
	
	if (abs(test_pos.x) > cube_half_size ||abs(test_pos.y) > cube_half_size || abs(test_pos.z) > cube_half_size) {
		discard;
	}
	ALBEDO = texture(texture_albedo, (test_pos.xz * 0.5) + 0.5).rgb;
	ALPHA = texture(texture_albedo, (test_pos.xz * 0.5) + 0.5).a;
}"

[sub_resource type="ShaderMaterial" id=5]
resource_local_to_scene = true
shader = SubResource( 4 )
shader_param/cube_half_size = 1.0
shader_param/texture_albedo = ExtResource( 2 )

[node name="BulletDecal" instance=ExtResource( 1 )]

[node name="Decal" parent="." index="0"]
transform = Transform( 0.2, 0, 0, 0, -4.37114e-08, -0.2, 0, 1, -8.74228e-09, 0, 0, 0 )
material/0 = SubResource( 5 )
